spring:
  # 选择配置文件（dev：开发环境配置，pro：生产环境配置）
  profiles:
    active: dev
  redis:
    # 连接超时时间（毫秒）
    timeout: 5000
    jedis:
      pool:
        # 连接池最大连接数（使用负值表示没有限制）
        max-active: 8
        # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
        # 连接池中的最大空闲连接
        max-idle: 10
        # 连接池中的最小空闲连接
        min-idle: 5
  #MySQL配置
  datasource:
    driverClassName: com.mysql.cj.jdbc.Driver
    # 连接池的配置信息
    # 初始化大小，最小，最大
    initialSize: 5
    minIdle: 5
    maxActive: 20
    # 配置获取连接等待超时的时间
    maxWait: 60000
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: true
    testOnReturn: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    #poolPreparedStatements: true
    #maxPoolPreparedStatementPerConnectionSize: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    #spring.datasource.filters=stat,wall,log4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    #spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
  #数据库连接池
  type: com.alibaba.druid.pool.DruidDataSource

#mybatis配置
mybatis:
  mapper-locations: classpath*:mapper/*.xml
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl


task:
  pool:
    #核心线程池大小
    corePoolSize: 10
    #最大线程数
    maxPoolSize: 20
    #活跃时间
    task.pool.keepAliveSeconds: 300
    #队列容量
    task.pool.queueCapacity: 20
