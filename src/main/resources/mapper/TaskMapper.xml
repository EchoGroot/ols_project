<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ols.ols_project.mapper.TaskMapper">
    <select id="getImageListByTaskId" resultType="java.lang.String">
        select url from ols_task where id = #{taskId}
    </select>

    <select id="getDocListByTaskId" resultType="java.lang.String">
        select url from ols_task where id = #{taskId}
    </select>

    <select id="getAccepteImageListByAccepteId" resultType="com.ols.ols_project.model.AcceptTaskForTaskInfo">
        select
           ols_task.id as ols_task_id,
           ols_task.name as name,
           ols_task.url as ols_task_url,
           information,
           ols_task.points as points,
           ols_task.state as ols_task_state,
           type,
           ols_task.finish_time as ols_task_finish_time,
           release_time,
           ols_user.name as release_user_name,
           accept_num,
           adopt_accept_id,
           ols_accept.id as ols_accept_id,
           user_id,
           accept_time,
           ols_accept.finish_time as ols_accept_finish_time,
           ols_accept.state as ols_accept_state,
           ols_accept.url as ols_accept_url
        from
          ols_task,ols_accept,ols_user
        where
          release_user_id=ols_user.id
--           and ols_task.type=1
          and ols_task.id = ols_accept.task_id
          and ols_accept.id = #{acceptId}
    </select>

    <select id="getAccepteTaskInfoByAcceptId" resultType="com.ols.ols_project.model.entity.AcceptEntity">
        select
          id,
          user_id,
          task_id,
          accept_time,
          finish_time,
          state,
          url,
          ext1,
          ext2,
          ext3
        from
          ols_accept
        where
          id=#{acceptId}
    </select>

    <update id="storeImageLabelInfoByTempTaskId">
      update
        <if test="pageType == 'labelExamplePage'">
            ols_task
        </if>
        <if test="pageType != 'labelExamplePage'">
            ols_accept
        </if>
      set
        url=#{url}
      where
        id=#{tempTaskId}
    </update>

    <update id="updTaskState">
      update
        ols_task
      set
        state=4
      where
        id=#{taskId}
    </update>

    <select id="getNotCheckedTask" resultMap="TaskMap">
        SELECT
            id,
            name,
            url,
            information,
            points,
            state,
            type,
            release_time,
            finish_time,
            release_user_id,
            accept_num,
            adopt_accept_id,
            ext1,
            ext2,
            ext3
        from
            ols_task
        where
            ext2 like '${userId}'
            and state = 4
    </select>

    <update id="setNotCheckedTaskForUser">
        update
          ols_task
        set
          ext2 = '${userId}'
        where
          state = 4
          and ext2 is null
        limit
          #{count}
    </update>

    <select id="getTaskInfoByTaskId" resultType="com.ols.ols_project.model.entity.TaskEntity">
        select
          id,
          name,
          url,
          information,
          points,
          state,
          type,
          release_time,
          finish_time,
          release_user_id,
          accept_num,
          adopt_accept_id,
          ext1,
          ext2,
          ext3
        from
          ols_task
        where
          id = #{taskId}
    </select>

    <insert id="insAcceptTask" parameterType="com.ols.ols_project.model.entity.AcceptEntity">
        insert into ols_accept
          (
            id,
            user_id,
            task_id,
            accept_time,
            finish_time,
            state,
            url,
            ext1,
            ext2,
            ext3
          )
        values
          (
            #{id},
            #{user_id},
            #{task_id},
            #{accept_time},
            #{finish_time},
            #{state},
            #{url},
            #{ext1},
            #{ext2},
            #{ext3}
          )
    </insert>

    <select id="selAcceptNumOfTask" resultType="int">
        select
          accept_num
        from
          ols_task
        where
          id=#{taskId}
    </select>

    <update id="updAcceptNumOfTask">
        update
          ols_task
        set
          accept_num=#{acceptNum}
        where
          id=#{taskId}
    </update>

    <update id="taskPassOrNotPassAudits">
        update
          ols_task
        set
          state =
        <if test="operation == 'yes'">
            5
        </if>
        <if test="operation == 'no'">
            6
        </if>
        where
          id=#{taskId}
    </update>

    <insert id="insJudge" parameterType="com.ols.ols_project.model.entity.JudgeEntity">
        insert into
          ols_judge(
              id,
              user_id,
              task_id,
              ispassed,
              isfirst,
              message,
              judge_time,
              ext1,
              ext2,
              ext3
            )
        values
          (
            #{id},
            #{user_id},
            #{task_id},
            #{ispassed},
            #{isfirst},
            #{message},
            #{judge_time},
            #{ext1},
            #{ext2},
            #{ext3}
          )
    </insert>

    <select id="selFinishCheckTaskByUserId" resultMap="finishCheckTaskMap,total">
        SELECT
        SQL_CALC_FOUND_ROWS ols_task.id,
        ols_task.name as task_name,
        release_time,
        release_user_id,
        ols_judge.id as judge_id,
        user_id,
        task_id,
        ispassed,
        message,
        judge_time,
        ols_user.id,
        ols_user.name as release_user_name
        from
        ols_task,ols_judge,ols_user
        where
        task_id=ols_task.id
        and release_user_id=ols_user.id
        and user_id=#{userId}
        <if test="searchInfo != ''">
            and (ols_task.name like '%${searchInfo}%'
            or ols_user.name like '%${searchInfo}%')
        </if>
        <choose>
            <when test="queryInfo == 'passed'">
                and ispassed = 1
            </when>
            <when test="queryInfo == 'notPassed'">
                and ispassed = 0
            </when>
        </choose>
        <if test="queryInfo == 'timeUp'">
            ORDER BY judge_time
        </if>
        <if test="queryInfo == 'timeDown'">
            ORDER BY judge_time DESC
        </if>
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <update id="updExt1">
        update
          ols_task
        set
          ext1=#{ext1}
        where
          id=#{taskId}
    </update>

    <update id="updAcceptState">
        update
          ols_accept
        set
          state=1
        where
          id=#{acceptId}
    </update>

    <resultMap id="TaskMap" type="com.ols.ols_project.model.entity.TaskEntity" >
        <id column="id" property="id"  />
        <result column="name" property="name" />
        <result column="url" property="url" />
        <result column="information" property="information" />
        <result column="points" property="points" />
        <result column="state" property="state" />
        <result column="type" property="type" />
        <result column="release_time" property="release_time" />
        <result column="finish_time" property="finish_time" />
        <result column="release_user_id" property="release_user_id" />
        <result column="accept_num" property="accept_num" />
        <result column="adopt_accept_id" property="adopt_accept_id" />
        <result column="ext1" property="ext1" />
        <result column="ext2" property="ext2" />
        <result column="ext3" property="ext3" />
    </resultMap>

    <resultMap id="finishCheckTaskMap" type="com.ols.ols_project.model.FinishCheckTask" >
        <id column="task_id" property="taskId"  />
        <result column="task_name" property="taskName" />
        <result column="release_time" property="releaseTime" />
        <result column="release_user_name" property="releaseUserName" />
        <result column="judge_id" property="judgeId" />
        <result column="ispassed" property="isPassed" />
        <result column="message" property="message" />
        <result column="judge_time" property="judgeTime" />
    </resultMap>

    <resultMap id="total" type="java.lang.Integer">
        <result column="total"/>
    </resultMap>

    <!--
	    anthour:  王金鹏
 	    date:     2020/3/21 22:39
    -->
    <insert id="creatTask" parameterType="com.ols.ols_project.model.entity.TaskEntity">
        insert into ols_task
        (
            id,
            name,
            url,
            information,
            points,
            state,
            type,
            release_time,
            finish_time,
            release_user_id,
            accept_num,
            adopt_accept_id,
            ext1,
            ext2,
            ext3
        )
        values
        (
            #{id},
            #{name},
            #{url},
            #{information},
            #{points},
            #{state},
            #{type},
            #{release_time},
            #{finish_time},
            #{release_user_id},
            #{accept_num},
            #{adopt_accept_id},
            #{ext1},
            #{ext2},
            #{ext3}
        )
    </insert>
    <select id="getAllTask" resultMap="TaskMap,total">
        select
            SQL_CALC_FOUND_ROWS id,
            name,
            url,
            information,
            points,
            state,
            type,
            finish_time,
            release_time,
            release_user_id,
            accept_num,
            adopt_accept_id,
            ext1,
            ext2,
            ext3
        from
            ols_task
        where
            1=1
            <if test="searchInfo != ''">
                <choose>
                    <when test="searchType == ''">
                        and (ols_task.name like '%${searchInfo}%')
                    </when>
                    <when test="searchType == 'id'">
                        and (ols_task.id like '%${searchInfo}%')
                    </when>
                    <when test="searchType == 'name'">
                        and (ols_task.name like '%${searchInfo}%')
                    </when>
                    <when test="searchType == 'release_user_id'">
                        and (ols_task.release_user_id like '%${searchInfo}%')
                    </when>
                    <when test="searchType == 'ext2'">
                        and (ols_task.ext2 like '%${searchInfo}%')
                    </when>
                </choose>
            </if>
            <choose>
                <when test="query == 'adopted'">
                    and ols_task.state = 1
                </when>
                <when test="query == 'expired'">
                    and ols_task.state = 3
                </when>
                <when test="query == 'underreview'">
                    and ols_task.state = 4
                </when>
                <when test="query == 'needlabel'">
                    and ols_task.state = 5
                </when>
                <when test="query == 'failedreview'">
                    and ols_task.state = 6
                </when>
                <when test="query == ''">
                </when>
            </choose>
            <choose>
                <when test="queryInfo == 'doc'">
                    and type=0
                </when>
                <when test="queryInfo == 'img'">
                    and type=1
                </when>
                <when test="queryInfo == ''">
                </when>
            </choose>
            <choose>
                <when test="field == ''">
                    ORDER BY release_time
                </when>
                <when test="field == 'points'">
                    ORDER BY points
                </when>
                <when test="field == 'type'">
                    ORDER BY type
                </when>
                <when test="field == 'release_time'">
                    ORDER BY release_time
                </when>
                <when test="field == 'accept_num'">
                    ORDER BY accept_num
                </when>
                <when test="field == 'finish_time'">
                    ORDER BY finish_time
                </when>
                <when test="field == 'release_user_id'">
                    ORDER BY release_user_id
                </when>
                <when test="field == 'accept_num'">
                    ORDER BY accept_num
                </when>
                <when test="field == 'adopt_accept_id'">
                    ORDER BY adopt_accept_id
                </when>
                <when test="field == 'ext1'">
                    ORDER BY ext1
                </when>
                <when test="field == 'ext2'">
                    ORDER BY ext2
                </when>
                <when test="field == 'ext3'">
                    ORDER BY ext3
                </when>
            </choose>
            <choose>
                <when test="order == 'desc'">
                    DESC
                </when>
                <when test="order == ''">
                    DESC
                </when>
                <when test="order == 'asc'">
                    ASC
                </when>
            </choose>
            <if test="end != 0">
                limit
                #{start},#{end};
            </if>
            <if test="end == 0">
            ;
            </if>
        SELECT FOUND_ROWS() as total;
    </select>
    <update id="clickNumPlus">
        update
            ols_task
        set
            ext3=ext3+1
        where
            id=#{taskId}
    </update>

    <update id="setFinishById">
        update
            ols_task
        set
            state=1,
            adopt_accept_id=#{acceptId}
        where
            id=#{taskId}
    </update>
    <select id="getClickNum" resultType="com.ols.ols_project.model.entity.TaskEntity">
        SELECT id,
               name,
               ext3
        FROM
             ols_task
        ORDER BY
                 ext3 DESC
                 LIMIT 10;
    </select>
    <select id="getPoints" resultType="int">
        select
         points
        from
        ols_task
        where
        id=#{taskId}
    </select>

    <select id="getAdminImgChartData" resultMap="monthAndCountMap">
        select
            DATE_FORMAT(release_time, '%m') as month,
        count(1) as count
        from
        ols_task
        where
            state = #{state}
            and type=1
            and DATE_FORMAT(release_time, '%Y')=#{year}
        GROUP BY
            DATE_FORMAT(release_time, '%m');
    </select>
    <!--
    获取文本类型分析数据
    -->
    <select id="getAdminDocChartData" resultMap="monthAndCountMap">
        select
            DATE_FORMAT(release_time, '%m') as month,
            count(1) as count
        from
            ols_task
        where
            state = #{state}
            and type=0
            and DATE_FORMAT(release_time, '%Y')=#{year}
        GROUP BY
            DATE_FORMAT(release_time, '%m');
    </select>

    <select id="getAllReleaseDocById" resultMap="monthAndCountMap">
        select
        <if test="state==1">
            DATE_FORMAT(finish_time, '%m') as month,
        </if>
        <if test="state==5">
            DATE_FORMAT(release_time, '%m') as month,
        </if>
        <if test="state==0">
            DATE_FORMAT(release_time, '%m') as month,
        </if>
        count(1) as count
        from
        ols_task
        where
        release_user_id = #{userId}
        and type=0
        <if test="state!=0">
            and state = #{state}
            <if test="state==1">
                and DATE_FORMAT(finish_time, '%Y')=#{year}
            </if>
            <if test="state==5">
                and DATE_FORMAT(release_time, '%Y')=#{year}
            </if>
        </if>
        <if test="state==0">
            and DATE_FORMAT(release_time, '%Y')=#{year}
        </if>
        GROUP BY
        <if test="state!=0">
            <if test="state==1">
                DATE_FORMAT(finish_time, '%m');
            </if>
            <if test="state==5">
                DATE_FORMAT(release_time, '%m');
            </if>
        </if>
        <if test="state==0">
            DATE_FORMAT(release_time, '%m');
        </if>
    </select>
    <select id="getAllReleaseById" resultMap="monthAndCountMap">
        select
        <if test="state==1">
            DATE_FORMAT(finish_time, '%m') as month,
        </if>
        <if test="state==5">
            DATE_FORMAT(release_time, '%m') as month,
        </if>
        <if test="state==0">
            DATE_FORMAT(release_time, '%m') as month,
        </if>
            count(1) as count
        from
            ols_task
        where
            release_user_id = #{userId}
            and type=1
            <if test="state!=0">
                and state = #{state}
                <if test="state==1">
                    and DATE_FORMAT(finish_time, '%Y')=#{year}
                </if>
                <if test="state==5">
                    and DATE_FORMAT(release_time, '%Y')=#{year}
                </if>
            </if>
            <if test="state==0">
                and DATE_FORMAT(release_time, '%Y')=#{year}
            </if>
        GROUP BY
            <if test="state!=0">
                <if test="state==1">
                    DATE_FORMAT(finish_time, '%m');
                </if>
                <if test="state==5">
                    DATE_FORMAT(release_time, '%m');
                </if>
            </if>
            <if test="state==0">
                DATE_FORMAT(release_time, '%m');
            </if>
    </select>
    <select id="getJudgeTimeById" resultMap="monthAndCountMap">
        SELECT
            DATE_FORMAT(judge_time, '%m') as month,
            count(1) as count
        FROM
            ols_judge,ols_task
        WHERE
            ols_task.id = ols_judge.task_id
            <choose>
                <when test="userId!=10">
                    and ols_task.release_user_id = #{userId}
                </when>
            </choose>
            and DATE_FORMAT(judge_time, '%Y')=#{year}
            and ispassed = 0
            and state = 6
        GROUP BY
            DATE_FORMAT(judge_time, '%m');
    </select>

    <select id="getAcceptImgTaskByUserId" resultMap="AcceptTaskMap,total">
        select
        SQL_CALC_FOUND_ROWS ols_task.id as taskId,
        ols_accept.id as acceptId,
        ols_task.name as taskName,
        ols_task.points as points,
        ols_task.state as taskState,
        type,
        release_time as releaseTime,
        ols_user.name as releaseName,
        accept_num as acceptNum,
        accept_time as acceptTime,
        ols_accept.finish_time as finishTime,
        ols_accept.state as acceptState
        from
        ols_task,ols_accept,ols_user
        where
        release_user_id=ols_user.id
        and ols_task.id = ols_accept.task_id
        and ols_accept.user_id = #{id}
        and type= 1
        <if test="searchInfo != ''">
            and (ols_task.name like '%${searchInfo}%')
        </if>
        <choose>
            <when test="query == 'acceptfinish'">
                and ols_accept.state != 0
            </when>
            <when test="query == 'acceptnotfinish'">
                and ols_accept.state = 0
            </when>
        </choose>
        <choose>
            <when test="queryInfo == ''">
            </when>
            <when test="queryInfo == 'finish'">
                and ols_accept.state=1
            </when>
            <when test="queryInfo == 'adopted'">
                and ols_accept.state=2
            </when>
            <when test="queryInfo == 'notAdopted'">
                and ols_accept.state=3
            </when>
            <when test="queryInfo == 'invalid'">
                and ols_accept.state=4
            </when>
        </choose>
        <choose>
            <when test="field == ''">
                ORDER BY release_time
            </when>
            <when test="field == 'points'">
                ORDER BY ols_task.points
            </when>
            <when test="field == 'acceptNum'">
                ORDER BY accept_num
            </when>
            <when test="field == 'acceptTime'">
                ORDER BY accept_time
            </when>
            <when test="field == 'releaseTime'">
                ORDER BY release_time
            </when>
            <when test="field == 'acceptState'">
                ORDER BY ols_accept.state
            </when>
            <when test="field == 'finishTime'">
                ORDER BY ols_accept.finish_time
            </when>
        </choose>
        <choose>
            <when test="order == 'desc'">
                DESC
            </when>
            <when test="order == ''">
                DESC
            </when>
            <when test="order == 'asc'">
                ASC
            </when>
        </choose>
        <if test="end != 0">
            limit
            #{start},#{end};
        </if>
        <if test="end == 0">
            ;
        </if>
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getAcceptDocTaskByUserId" resultMap="AcceptTaskMap,total">
        select
        SQL_CALC_FOUND_ROWS ols_task.id as taskId,
        ols_accept.id as acceptId,
        ols_task.name as taskName,
        ols_task.points as points,
        ols_task.state as taskState,
        type,
        release_time as releaseTime,
        ols_user.name as releaseName,
        accept_num as acceptNum,
        accept_time as acceptTime,
        ols_accept.finish_time as finishTime,
        ols_accept.state as acceptState
        from
        ols_task,ols_accept,ols_user
        where
        release_user_id=ols_user.id
        and ols_task.id = ols_accept.task_id
        and ols_accept.user_id = #{id}
        and type= 0
        <if test="searchInfo != ''">
            and (ols_task.name like '%${searchInfo}%')
        </if>
        <choose>
            <when test="query == 'acceptfinish'">
                and ols_accept.state != 0
            </when>
            <when test="query == 'acceptnotfinish'">
                and ols_accept.state = 0
            </when>
        </choose>
        <choose>
            <when test="queryInfo == ''">
            </when>
            <when test="queryInfo == 'finish'">
                and ols_accept.state=1
            </when>
            <when test="queryInfo == 'adopted'">
                and ols_accept.state=2
            </when>
            <when test="queryInfo == 'notAdopted'">
                and ols_accept.state=3
            </when>
            <when test="queryInfo == 'invalid'">
                and ols_accept.state=4
            </when>
        </choose>
        <choose>
            <when test="field == ''">
                ORDER BY release_time
            </when>
            <when test="field == 'points'">
                ORDER BY ols_task.points
            </when>
            <when test="field == 'acceptNum'">
                ORDER BY accept_num
            </when>
            <when test="field == 'acceptTime'">
                ORDER BY accept_time
            </when>
            <when test="field == 'releaseTime'">
                ORDER BY release_time
            </when>
            <when test="field == 'acceptState'">
                ORDER BY ols_accept.state
            </when>
            <when test="field == 'finishTime'">
                ORDER BY ols_accept.finish_time
            </when>
        </choose>
        <choose>
            <when test="order == 'desc'">
                DESC
            </when>
            <when test="order == ''">
                DESC
            </when>
            <when test="order == 'asc'">
                ASC
            </when>
        </choose>
        <if test="end != 0">
            limit
            #{start},#{end};
        </if>
        <if test="end == 0">
            ;
        </if>
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getReleaseImgTaskByUserId" resultMap="ReleaseTaskMap,total">
        SELECT
        SQL_CALC_FOUND_ROWS id,
        name,
        url,
        information,
        points,
        state,
        type,
        release_time,
        finish_time,
        release_user_id,
        accept_num,
        adopt_accept_id,
        ext1,
        ext2,
        ext3
        from
        ols_task
        where
        release_user_id=#{id}
        and type= 1
        <if test="searchInfo != ''">
            and (name like '%${searchInfo}%')
        </if>
        <choose>
            <when test="query == 'releasefinish'">
                and (state = 1 or state=2 or state=3)
            </when>
            <when test="query == 'releasenotfinish'">
                and (state = 4 or state=5 or state=6 or state=7)
            </when>
        </choose>
        <choose>
            <when test="queryInfo == 'check'">
                and state=4
            </when>
            <when test="queryInfo == 'notPassed'">
                and state=6
            </when>
            <when test="queryInfo == 'passed'">
                and state=5
            </when>
            <when test="queryInfo == 'notlabelexm'">
                and state=7
            </when>
            <when test="queryInfo == 'finish'">
                and state=1
            </when>
            <when test="queryInfo == 'delete'">
                and state=2
            </when>
            <when test="queryInfo == 'disable'">
                and state=3
            </when>
        </choose>
        <choose>
            <when test="field == ''">
                ORDER BY release_time
            </when>
            <when test="field == 'points'">
                ORDER BY points
            </when>
            <when test="field == 'state'">
                ORDER BY state
            </when>
            <when test="field == 'release_time'">
                ORDER BY release_time
            </when>
            <when test="field == 'accept_num'">
                ORDER BY accept_num
            </when>
            <when test="field == 'ext1'">
                ORDER BY ext1
            </when>
        </choose>
        <choose>
            <when test="order == 'desc'">
                DESC
            </when>
            <when test="order == ''">
                DESC
            </when>
            <when test="order == 'asc'">
                ASC
            </when>
        </choose>
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getReleaseDocTaskByUserId" resultMap="ReleaseTaskMap,total">
        SELECT
        SQL_CALC_FOUND_ROWS id,
        name,
        url,
        information,
        points,
        state,
        type,
        release_time,
        finish_time,
        release_user_id,
        accept_num,
        adopt_accept_id,
        ext1,
        ext2,
        ext3
        from
        ols_task
        where
        release_user_id=#{id}
        and type= 0
        <if test="searchInfo != ''">
            and (name like '%${searchInfo}%')
        </if>
        <choose>
            <when test="query == 'releasefinish'">
                and (state = 1 or state=2 or state=3)
            </when>
            <when test="query == 'releasenotfinish'">
                and (state = 4 or state=5 or state=6 or state=7)
            </when>
        </choose>
        <choose>
            <when test="queryInfo == 'check'">
                and state=4
            </when>
            <when test="queryInfo == 'notPassed'">
                and state=6
            </when>
            <when test="queryInfo == 'passed'">
                and state=5
            </when>
            <when test="queryInfo == 'notlabelexm'">
                and state=7
            </when>
            <when test="queryInfo == 'finish'">
                and state=1
            </when>
            <when test="queryInfo == 'delete'">
                and state=2
            </when>
            <when test="queryInfo == 'disable'">
                and state=3
            </when>
        </choose>
        <choose>
            <when test="field == ''">
                ORDER BY release_time
            </when>
            <when test="field == 'points'">
                ORDER BY points
            </when>
            <when test="field == 'state'">
                ORDER BY state
            </when>
            <when test="field == 'release_time'">
                ORDER BY release_time
            </when>
            <when test="field == 'accept_num'">
                ORDER BY accept_num
            </when>
            <when test="field == 'ext1'">
                ORDER BY ext1
            </when>
        </choose>
        <choose>
            <when test="order == 'desc'">
                DESC
            </when>
            <when test="order == ''">
                DESC
            </when>
            <when test="order == 'asc'">
                ASC
            </when>
        </choose>
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <resultMap id="AcceptTaskMap" type="com.ols.ols_project.model.AcceptTask" ></resultMap>

    <resultMap id="ReleaseTaskMap" type="com.ols.ols_project.model.entity.TaskEntity" >
        <id column="id" property="id"  />
        <result column="name" property="name" />
        <result column="url" property="url" />
        <result column="information" property="information" />
        <result column="points" property="points" />
        <result column="state" property="state" />
        <result column="type" property="type" />
        <result column="release_time" property="release_time" />
        <result column="finish_time" property="finish_time" />
        <result column="release_user_id" property="release_user_id" />
        <result column="accept_num" property="accept_num" />
        <result column="adopt_accept_id" property="adopt_accept_id" />
        <result column="ext1" property="ext1" />
        <result column="ext2" property="ext2" />
        <result column="ext3" property="ext3" />
    </resultMap>

    <resultMap id="monthAndCountMap" type="com.ols.ols_project.model.MonthAndCount" >
        <id column="month" property="month"  />
        <result column="count" property="count" />
    </resultMap>

</mapper>