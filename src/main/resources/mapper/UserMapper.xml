<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ols.ols_project.mapper.UserMapper">

    <select id="getUserInfoById"
            resultType="com.ols.ols_project.model.entity.UserEntity">
        select
          id,name,birthday,sex,email,role,points
        from
          ols_user
        where
          id=#{id}
    </select>

    <select id="getAcceptTaskByUserId" resultMap="AcceptTaskMap,total">
        select
           SQL_CALC_FOUND_ROWS ols_task.id as taskId,
           ols_accept.id as acceptId,
           ols_task.name as taskName,
           ols_task.points as points,
           ols_task.state as taskState,
           type,
           release_time as releaseTime,
           ols_user.name as releaseName,
           accept_num as acceptNum,
           accept_time as acceptTime,
           ols_accept.finish_time as finishTime,
           ols_accept.state as acceptState
        from
          ols_task,ols_accept,ols_user
        where
          release_user_id=ols_user.id
          and ols_task.id = ols_accept.task_id
          and ols_accept.user_id = #{id}
          <if test="searchInfo != ''">
            and (ols_task.name like '%${searchInfo}%')
          </if>
          <choose>
            <when test="query == 'acceptfinish'">
                and ols_accept.state != 0
            </when>
            <when test="query == 'acceptnotfinish'">
                and ols_accept.state = 0
            </when>
          </choose>
        <choose>
            <when test="queryInfo == 'timeUp'">
                ORDER BY accept_time
            </when>
            <when test="queryInfo == 'timeDown'">
                ORDER BY accept_time DESC
            </when>
            <when test="queryInfo == 'doc'">
                and type=0
            </when>
            <when test="queryInfo == 'img'">
                and type=1
            </when>
            <when test="queryInfo == 'pointsUp'">
                ORDER BY ols_task.points
            </when>
            <when test="queryInfo == 'pointsDown'">
                ORDER BY ols_task.points DESC
            </when>
            <when test="queryInfo == 'releaseTimeUp'">
                ORDER BY release_time
            </when>
            <when test="queryInfo == 'releaseTimeDown'">
                ORDER BY release_time DESC
            </when>
            <when test="queryInfo == 'finishTimeUp'">
                ORDER BY ols_accept.finish_time
            </when>
            <when test="queryInfo == 'finishTimeDown'">
                ORDER BY ols_accept.finish_time DESC
            </when>
            <when test="queryInfo == 'finish'">
                and ols_accept.state=1
            </when>
            <when test="queryInfo == 'adopted'">
                and ols_accept.state=2
            </when>
            <when test="queryInfo == 'notAdopted'">
                and ols_accept.state=3
            </when>
            <when test="queryInfo == 'invalid'">
                and ols_accept.state=4
            </when>
        </choose>
        <if test="end != 0">
            limit
            #{start},#{end};
        </if>
        <if test="end == 0">
            ;
        </if>
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getReleaseTaskByUserId" resultMap="ReleaseTaskMap,total">
        SELECT
            SQL_CALC_FOUND_ROWS id,
            name,
            url,
            information,
            points,
            state,
            type,
            release_time,
            finish_time,
            release_user_id,
            accept_num,
            adopt_accept_id,
            ext1,
            ext2,
            ext3
        from
            ols_task
        where
            release_user_id=#{id}
            <if test="searchInfo != ''">
                and (name like '%${searchInfo}%')
            </if>
            <choose>
                <when test="query == 'releasefinish'">
                    and (state = 1 or state=2 or state=3)
                </when>
                <when test="query == 'releasenotfinish'">
                    and (state = 4 or state=5 or state=6)
                </when>
            </choose>
            <choose>
                <when test="queryInfo == 'timeUp'">
                    ORDER BY release_time
                </when>
                <when test="queryInfo == 'timeDown'">
                    ORDER BY release_time DESC
                </when>
                <when test="queryInfo == 'doc'">
                    and type=0
                </when>
                <when test="queryInfo == 'img'">
                    and type=1
                </when>
                <when test="queryInfo == 'check'">
                    and state=4
                </when>
                <when test="queryInfo == 'notPassed'">
                    and state=6
                </when>
                <when test="queryInfo == 'passed'">
                    and state=5
                </when>
                <when test="queryInfo == 'finish'">
                    and state=1
                </when>
                <when test="queryInfo == 'delete'">
                    and state=2
                </when>
                <when test="queryInfo == 'disable'">
                    and state=3
                </when>
                <when test="queryInfo == 'acceptNumUp'">
                    ORDER BY accept_num
                </when>
                <when test="queryInfo == 'acceptNumDown'">
                    ORDER BY accept_num DESC
                </when>
            </choose>
        limit
          #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getPassWodById" resultType="String">
        select
          password
        from
          ols_user
        where
          id=#{id}
    </select>

    <update id="changePassWordById">
        update
          ols_user
        set
          password=#{passWord}
        where
          id=#{id}
    </update>

    <select id="getReviewerSignUp" resultMap="UserMap,total">
        SELECT
          SQL_CALC_FOUND_ROWS ols_user.id,
          name,
          birthday,
          sex,
          email,
          role,
          points,
          ols_user.ext1,
          ols_user.ext2,
          ols_user.ext3,
          ols_user_operation_log.time as signUpTime
        from
          ols_user,ols_user_operation_log
        where
          role=2
          and ols_user_operation_log.user_id=ols_user.id
        <if test="searchInfo != ''">
            and name like '%${searchInfo}%'
        </if>
        <choose>
            <when test="queryInfo == 'notHandled'">
                and ols_user.ext1 like '0'
            </when>
            <when test="queryInfo == 'passed'">
                and ols_user.ext1 like '1'
            </when>
            <when test="queryInfo == 'notPassed'">
                and ols_user.ext1 like '2'
            </when>
            <when test="queryInfo == 'man'">
                and ols_user.sex like '男'
            </when>
            <when test="queryInfo == 'wuman'">
                and ols_user.sex like '女'
            </when>
        </choose>
        <if test="queryInfo == 'timeUp'">
            ORDER BY signUpTime
        </if>
        <if test="queryInfo == 'timeDown'">
            ORDER BY signUpTime DESC
        </if>
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <update id="yesAndNoReviewerSignUp">
        update
          ols_user
        set
          ext1 =
          <if test="operation == 'yes'">
              '1'
          </if>
          <if test="operation == 'no'">
              '2'
          </if>
        where
          id = #{userId}
    </update>

    <resultMap id="AcceptTaskMap" type="com.ols.ols_project.model.AcceptTask" ></resultMap>

    <resultMap id="ReleaseTaskMap" type="com.ols.ols_project.model.entity.TaskEntity" >
        <id column="id" property="id"  />
        <result column="name" property="name" />
        <result column="url" property="url" />
        <result column="information" property="information" />
        <result column="points" property="points" />
        <result column="state" property="state" />
        <result column="type" property="type" />
        <result column="release_time" property="release_time" />
        <result column="finish_time" property="finish_time" />
        <result column="release_user_id" property="release_user_id" />
        <result column="accept_num" property="accept_num" />
        <result column="adopt_accept_id" property="adopt_accept_id" />
        <result column="ext1" property="ext1" />
        <result column="ext2" property="ext2" />
        <result column="ext3" property="ext3" />
    </resultMap>

    <resultMap id="UserMap" type="com.ols.ols_project.model.UserSignUp" >
        <id column="id" property="id"  />
        <result column="name" property="name" />
        <result column="birthday" property="birthday" />
        <result column="sex" property="sex" />
        <result column="email" property="email" />
        <result column="role" property="role" />
        <result column="points" property="points" />
        <result column="signUpTime" property="signUpTime" />
        <result column="ext1" property="ext1" />
        <result column="ext2" property="ext2" />
        <result column="ext3" property="ext3" />
    </resultMap>

    <update id="changeEmailById">
        update
          ols_user
        set
          email=#{email}
        where
          id=#{userId}
    </update>

</mapper>