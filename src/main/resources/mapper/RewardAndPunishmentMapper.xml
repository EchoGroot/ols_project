<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ols.ols_project.mapper.RewardAndPunishmentMapper">
    <!--
    发布惩罚信息 赵莎
    -->
    <insert id="CreateMessage">
        insert into ols_reward_and_punishment
        (id,type,user_id,information,ext1,ext2,create_time)
            value (#{id},#{type},#{user_id},#{information},
            #{ext1},#{ext2},#{create_time})
    </insert>
    <!--
    查询奖惩信息 赵莎
    -->
    <select id="getAllMessage" resultMap="RewardAndPunishmentMap,Total">
        select
        SQL_CALC_FOUND_ROWS id,
        user_id,
        type,
        information,
        ext1,
        ext2,
        create_time
        from
        ols_reward_and_punishment
        where 1=1
        <if test="searchInfo != ''">
            and (user_id like '%${searchInfo}%')
        </if>
        <choose>
            <when test="queryInfo == 'reward'">
                and type= 1
            </when>
            <when test="queryInfo == 'punishment'">
                and type = 0
            </when>
        </choose>
        <if test="queryInfo == 'timeUp'">
            ORDER BY create_time
        </if>
        <if test="queryInfo == 'timeDown'">
            ORDER BY create_time DESC
        </if>
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>
    <resultMap id="RewardAndPunishmentMap" type="com.ols.ols_project.model.entity.RewardAndPunishmentEnity" >
        <id column="id" property="id"  />
        <result column="user_id" property="user_id" />
        <result column="information" property="information" />
        <result column="type" property="type" />
        <result column="ext1" property="ext1" />
        <result column="ext2" property="ext2" />
        <result column="create_time" property="create_time" />
    </resultMap>
    <!--<resultMap id="Total" type="java.lang.Integer">-->
        <!--<result column="total"/>-->
    <!--</resultMap>-->
    <select id="selRAPinformationByType" resultMap="RewardAndPunishmentMap,total">
        select
        SQL_CALC_FOUND_ROWS id,
        user_id,
        type,
        information,
        ext1,
        ext2,
        create_time
        from
        ols_reward_and_punishment
        where 1=1
        <if test="searchInfo != ''">
            and user_id like '%${searchInfo}%'
        </if>
        <choose>
            <when test="queryInfo == 'reward'">
                and type= 1
            </when>
            <when test="queryInfo == 'punishment'">
                and type = 0
            </when>
        </choose>
        <if test="queryInfo == 'timeUp'">
            ORDER BY create_time
        </if>
        <if test="queryInfo == 'timeDown'">
            ORDER BY create_time DESC
        </if>
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getRInformationById" resultMap="RewardAndPunishmentMap,total">
        select
            SQL_CALC_FOUND_ROWS id,
            user_id,
            type,
            information,
            ext1,
            ext2,
            create_time
        from
            ols_reward_and_punishment
        where
              user_id=#{id}
        and type= 1
        limit
        #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getPInformationById" resultMap="RewardAndPunishmentMap,total">
        select
            SQL_CALC_FOUND_ROWS id,
            user_id,
            type,
            information,
            ext1,
            ext2,
            create_time
        from
            ols_reward_and_punishment
        where
            user_id=#{id}
          and type= 0
            limit
            #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getRPInformationById" resultMap="RewardAndPunishmentMap,total">
        select
            SQL_CALC_FOUND_ROWS id,
            user_id,
            type,
            information,
            ext1,
            ext2,
            create_time
        from
            ols_reward_and_punishment
        where
            user_id=#{id}
            limit
            #{start},#{end};
        SELECT FOUND_ROWS() as total;
    </select>

    <select id="getInformationByUserId" resultMap="monthAndCountMap">
        select
        <if test="type==0">
            DATE_FORMAT(create_time, '%m') as month,
        </if>
        <if test="type==1">
            DATE_FORMAT(create_time, '%m') as month,
        </if>
        count(1) as count
        from
        ols_reward_and_punishment
        where
        user_id = #{userId}
        <if test="type==0">
            and DATE_FORMAT(create_time, '%Y')=#{year}
        </if>
        <if test="type==1">
            and DATE_FORMAT(create_time, '%Y')=#{year}
        </if>
        and type  = #{type}
        GROUP BY
        <if test="type==0">
            DATE_FORMAT(create_time, '%m');
        </if>
        <if test="type==1">
            DATE_FORMAT(create_time, '%m');
        </if>
    </select>
    <resultMap id="monthAndCountMap" type="com.ols.ols_project.model.MonthAndCount" >
        <id column="month" property="month"  />
        <result column="count" property="count" />
    </resultMap>

    <select id="getRAPmessage" resultMap="monthAndCountMap">
        select
        <if test="type==0">
            DATE_FORMAT(create_time, '%m') as month,
        </if>
        <if test="type==1">
            DATE_FORMAT(create_time, '%m') as month,
        </if>
        count(1) as count
        from
        ols_reward_and_punishment
        where
        1=1
        <if test="type==0">
            and DATE_FORMAT(create_time, '%Y')=#{year}
        </if>
        <if test="type==1">
            and DATE_FORMAT(create_time, '%Y')=#{year}
        </if>
        and  type = #{type}
        GROUP BY
        <if test="type==0">
            DATE_FORMAT(create_time, '%m');
        </if>
        <if test="type==1">
            DATE_FORMAT(create_time, '%m');
        </if>
    </select>
</mapper>